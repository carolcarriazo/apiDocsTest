openapi: 3.0.0
info:
  title: Ops Manager API for Mongod Process Management
  version: 1.0.0
  description: API documentation for managing mongod processes via the Ops Manager API.
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://localhost/api
paths:
  /groups/{projectId}/automationConfig:
    get:
      operationId: getAutomationConfig
      summary: Get Automation Configuration
      tags:
        - Automation Config
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID of the project for which to retrieve the automation configuration.
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval of the automation configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationConfig'
              ...
      examples:
        getRequestExample:
          summary: Example GET request for Automation Configuration
          value: |
            curl --user "{publicApiKey}:{privateApiKey}" --digest \
            --header "Accept: application/json" \
            --request GET \
            "https://<OpsManagerHost>:<Port>/api/public/v1.0/groups/"
          getResponseExample:
            summary: Example response for a successful GET request
            value: |
              % Total  % Received % Xferd Average Speed Time Time  Time Current Dload Upload Total Spent Left Speed 
              100 106 100 106  0  0 33576 0 35333 
              100 1393k 0 1393k 0 0 29.1M 0 29.1M 
        '401':
          description: Unauthorized access.
        '500':
          description: Server error.
      security:
        - ApiKeyAuth: []
      x-examples:
        getRequestExample:
          summary: Example GET request for Automation Configuration
          value: |
            curl --user "{publicApiKey}:{privateApiKey}" --digest \
            --header "Accept: application/json" \
            --request GET \
            "https://<OpsManagerHost>:<Port>/api/public/v1.0/groups/"
    put:
      operationId: updateAutomationConfig
      summary: Update Automation Configuration
      tags:
        - Automation Config
      parameters:
        - name: projectId
          in: path
          required: true
          description: The ID of the project for which to update the automation configuration.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomationConfig'
            examples:
              putRequestExample:
                summary: Example PUT request for updating Automation Configuration
                value: |
                  curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" --digest \
                  --header "Accept: application/json" \
                  --header "Content-Type: application/json" \
                  --include --request PUT \
                  "https://<OpsManagerHost>:<Port>/api/public/v1" \
                  --data-binary "@/Users/admin/currentAutomationConfig_updated.json"
      responses:
        '200':
          description: Successful update of the automation configuration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationConfig'
              examples:
                putResponseExample:
                  summary: Example response for a successful PUT request
                  value: |
                    HTTP/1.1 401 Unauthorized 
                    WWW-Authenticate: Digest realm="MMS Public API", domain="", 
                    Content-Length: 0 
                    HTTP/1.1 100 Continue 
                    nonce="JuwM4w52 
                    HTTP/1.1 200 OK 
                    Date: Tue, 05 Sep 2023 06:35:03 GMT 
                    Strict-Transport-Security: max-age=0; includeSubdomains; 
                    Referrer-Policy: strict-origin-when-cross-origin 
                    X-Permitted-Cross-Domain-Policies: none 
                    X-Content-Type-Options: nosniff 
                    X-MongoDB-Service-Version: gitHash=e6efff793e3f0ff2fb7daa51d70306934dced894; 
                    Content-Type: application/json 
                    X-Frame-Options: DENY 
                    Content-Length: 2
        '401':
          description: Unauthorized access.
        '500':
          description: Server error.
      security:
        - ApiKeyAuth: []
components:
  schemas:
    AutomationConfig:
      type: object
      description: The automation configuration for a mongod process.
      properties:
        lastRestart:
          type: string
          format: date-time
          description: The timestamp for the last restart of the mongod process.
      required:
        - lastRestart
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
